// Code generated by MockGen. DO NOT EDIT.
// Source: /home/pater92/Documents/work/Interview/Sea_LucaPaterlini/src/pipeProto/pipe.pb.go

package mock_pipe

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	reflect "reflect"
	"../pipeProto"
)

// MockTransferClient is a mock of TransferClient interface
type MockTransferClient struct {
	ctrl     *gomock.Controller
	recorder *MockTransferClientMockRecorder
}

// MockTransferClientMockRecorder is the mock recorder for MockTransferClient
type MockTransferClientMockRecorder struct {
	mock *MockTransferClient
}

// NewMockTransferClient creates a new mock instance
func NewMockTransferClient(ctrl *gomock.Controller) *MockTransferClient {
	mock := &MockTransferClient{ctrl: ctrl}
	mock.recorder = &MockTransferClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockTransferClient) EXPECT() *MockTransferClientMockRecorder {
	return _m.recorder
}

// AddUpdateRecord mocks base method
func (_m *MockTransferClient) AddUpdateRecord(ctx context.Context, in *pipe.Record, opts ...grpc.CallOption) (*empty.Empty, error) {
	_s := []interface{}{ctx, in}
	for _, _x := range opts {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "AddUpdateRecord", _s...)
	ret0, _ := ret[0].(*empty.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUpdateRecord indicates an expected call of AddUpdateRecord
func (_mr *MockTransferClientMockRecorder) AddUpdateRecord(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AddUpdateRecord", reflect.TypeOf((*MockTransferClient)(nil).AddUpdateRecord), _s...)
}

// MockTransferServer is a mock of TransferServer interface
type MockTransferServer struct {
	ctrl     *gomock.Controller
	recorder *MockTransferServerMockRecorder
}

// MockTransferServerMockRecorder is the mock recorder for MockTransferServer
type MockTransferServerMockRecorder struct {
	mock *MockTransferServer
}

// NewMockTransferServer creates a new mock instance
func NewMockTransferServer(ctrl *gomock.Controller) *MockTransferServer {
	mock := &MockTransferServer{ctrl: ctrl}
	mock.recorder = &MockTransferServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockTransferServer) EXPECT() *MockTransferServerMockRecorder {
	return _m.recorder
}

// AddUpdateRecord mocks base method
func (_m *MockTransferServer) AddUpdateRecord(_param0 context.Context, _param1 *pipe.Record) (*empty.Empty, error) {
	ret := _m.ctrl.Call(_m, "AddUpdateRecord", _param0, _param1)
	ret0, _ := ret[0].(*empty.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUpdateRecord indicates an expected call of AddUpdateRecord
func (_mr *MockTransferServerMockRecorder) AddUpdateRecord(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AddUpdateRecord", reflect.TypeOf((*MockTransferServer)(nil).AddUpdateRecord), arg0, arg1)
}
